{
  "paths": {
    "/register": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Register a new user",
        "operationId": "registerUser",
        "requestBody": {
          "description": "User data to register a new user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User created successfully"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "User already exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 409
                    },
                    "message": {
                      "type": "string",
                      "example": "User already exists"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Failed to create user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to create user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. User data is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request. User data is invalid."
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "example": {
                        "name": [
                          "Todos os campos devem ser preenchidos",
                          "Nome deve existir",
                          "Nome deve ter pelo menos 5 caracteres"
                        ],
                        "username": [
                          "Todos os campos devem ser preenchidos",
                          "Username deve existir",
                          "Username deve conter apenas letras e números",
                          "Nome de usuário deve ter pelo menos 3 caracteres"
                        ],
                        "email": [
                          "Todos os campos devem ser preenchidos",
                          "Email deve existir",
                          "Campos inválidos",
                          "Email e username não podem ser iguais"
                        ],
                        "password": [
                          "Todos os campos devem ser preenchidos",
                          "Password deve existir",
                          "Senha incorreta"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Incorrect password.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized. Incorrect password."
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "example": {
                        "password": [
                          "Senha incorreta"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity. Some fields are invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "string",
                      "example": "Unprocessable Entity. Some fields are invalid."
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "example": {
                        "email": [
                          "Campos inválidos"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/register/check": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Check if a user exists",
        "operationId": "checkUser",
        "requestBody": {
          "description": "User identifier to check",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserIdentifier"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User does not exist"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "User already exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 409
                    },
                    "message": {
                      "type": "string",
                      "example": "User already exists"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. User data is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request. User data is invalid."
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "example": {
                        "identifier": [
                          "Todos os campos devem ser preenchidos",
                          "Identifier deve existir"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity. Some fields are invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "string",
                      "example": "Unprocessable Entity. Some fields are invalid."
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "example": {
                        "identifier": [
                          "Campos inválidos"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The full name of the user",
            "example": "John Doe"
          },
          "username": {
            "type": "string",
            "description": "The username of the user",
            "example": "john.doe"
          },
          "email": {
            "type": "string",
            "description": "The email of the user",
            "example": "johndoe@example.com"
          },
          "password": {
            "type": "string",
            "description": "The password of the user",
            "example": "password123"
          }
        },
        "required": [
          "name",
          "username",
          "email",
          "password"
        ]
      },
      "UserIdentifier": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "description": "An identifier for the user, which can be either their username or email",
            "example": "johndoe@example.com or john.doe"
          }
        },
        "required": [
          "identifier"
        ]
      }
    }
  }
}